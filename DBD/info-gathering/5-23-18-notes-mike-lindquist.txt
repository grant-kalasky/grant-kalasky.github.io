# Meeting Notes 
# Mike Lindquist
# 5-23-18

# Notes

Onprem -> software that gives info based on lat/long, pings back to factual that says what is active (proximmity campaings, what should be loaded into memory and what should be removed) <- think of this as a deployment

Created the 3 objects
	at each stage, there are checks/validation to see what should be approved and if it should keep moving forward in the process
	1. create design - basic validaiton if it should be saved
	2. build - think of taking blueprint and turning it into the end product (i.e. audience - want an audience of people who make over 150k -> gives you all device IDs associated with that audience info)
	3. Deployment - get the files to somewhere that they can be ran

	All requests used to be manually approved
	After approval, it goes into a queue
	Either can error or success
		if Success -> got a file associated with the design now, user can now go into deployment UI and send it to a partner (trade desk or other integrated partners)
			|
			 -> goes to deployment partner 

Certain partners have auto-deploy, but manual stuff is still happening all over the map


Build approval/deploy approval phase isn't going to be picked up by external users - this is more relevant to internal
	-> How do we bring these parts into the internal admin tool

Goal:
	- want to make things easier for internal users to manage without having to go through different UIs and different logins
	- want this to be easy to understand who aren't technical who are working at ad angencies (they dont have a concept of "design build deploy")
	- DSPs (demand side platform)

Users:
	1. ***External users*** (non-technical)

KEEP IN MIND: 
Don't overload project with design decisions that only benefit partner services (internal factual users)
	Going to move functinoality that would help them to internal tool

We have 3 UIs
	1. Design page - main screen
	2. Build UI aka Deployment UI - page where you can see builds and request a deployment
	3. Admin UI - manages what's running on Onprem and aprove/delete these requests

External users don't understand these "objects" -> dont want to change the overall structure of the system and how objects are organized on the backend 
More important to create a UI that makes more sense for external users 
Give them more information that makes their job easier

Goal: 'i want this thing i built to be sent to place X'

idea: tracker that has design's status (think uber eats/postmates) <- could try exploring this

What is useful for people to know, what do they need to do, and how flexible can they be with doing these tasks
	Summarizing status, actions, what data 

Users may have something active on a given platform, but now we made modifications and want to 'refresh it' <- new language for this kind of thing? (refresh = redeploy)
	e.g. "up to date as of 5-2-18"

think about all different edge cases

take stock of what exists, question if it's required, and come from it from the other direction (what do people need, what do they care about)

people dont need to know that "build" is a thing - users typically dont conceptualize this correctly

OPPORTUNITY
the idea of 'what do i do when i go to X platform'
	-> what do i do once i have this data
	is there an interim solution (i.e. we have a pdf in the help desk)
demand and partners service will have a lot of ideas about this


# Questions

Q: 

	A: 


# Action iteams

Ask what type of language external users are using - they don't have a concept of a 'build'
"I have this thing and i want it in this place"

